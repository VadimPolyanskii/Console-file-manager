"""
МОДУЛЬ 3
Программа "Личный счет"

Описание работы программы:
Пользователь запускает программу, у него на счету 0.
Программа предлагает следующие варианты действий:
1. Пополнить счет
2. Покупка
3. История покупок
4. Выход

1. Пополнение счета
При выборе этого пункта пользователю предлагается ввести сумму, на сколько пополнить счет.
После того, как пользователь вводит сумму, она добавляется к счету.
Снова попадаем в основное меню.

2. Покупка
При выборе этого пункта пользователю предлагается ввести сумму покупки.
Если она больше количества денег на счете, то сообщаем, что денег не хватает, и переходим в основное меню.
Если денег достаточно, предлагаем пользователю ввести название покупки, например, "еда",
снимаем деньги со счета,
сохраняем покупку в историю,
выходим в основное меню.

3. История покупок
Выводим историю покупок пользователя (название и сумму),
возвращаемся в основное меню.

4. Выход
Выход из программы.

При выполнении задания можно пользоваться любыми средствами.
"""


# Инициализация класса
class PersonalAccount:
    def __init__(self):
        self.balance = 0            # Начальный баланс
        self.history = []            # История покупок (список кортежей (название, сумма))

    def deposit(self, amount):
        """Пополнение счёта."""
        if amount <= 0:
            raise ValueError("Сумма пополнения должна быть положительной")
        self.balance += amount

    def purchase(self, name, amount):
        """Совершение покупки."""
        if amount <= 0:
            raise ValueError("Сумма покупки должна быть положительной")
        if amount > self.balance:
            raise ValueError("Недостаточно средств")
        self.balance -= amount
        self.history.append((name, amount))

    def get_balance(self):
        """Получить текущий баланс."""
        return self.balance

    def get_history(self):
        """Получить историю покупок."""
        return self.history.copy()      # Возвращает копию списка истории (чтобы оригинальный список нельзя было изменить извне)

    def run(self):
        """Запуск интерактивного (вывода на экран) режима работы счёта."""
        while True:
            print()
            print(f'Баланс: {self.balance}')
            print('1. Пополнение счёта')
            print('2. Покупка')
            print('3. История покупок')
            print('4. Выход')
            print()

            choice = input('Выберите пункт меню: ')
            if choice == '1':
                # Обработка ошибок
                try:
                    summ = int(input('Введите сумму пополнения: '))
                    self.deposit(summ)
                except ValueError as e:
                    print(f"Ошибка: {e}")
            elif choice == '2':
                # Обработка ошибок
                try:
                    sum_bay = int(input('Введите сумму покупки: '))
                    name = input('Введите название покупки: ')
                    self.purchase(name, sum_bay)
                except ValueError as e:
                    print(f"Ошибка: {e}")
            elif choice == '3':
                print(f"История покупок {self.history}")
            elif choice == '4':
                break
            else:
                print("Неверный вариант")


# Код запускается только при прямом запуске файла (а не при его импорте)
if __name__ == "__main__":
    account = PersonalAccount()         # Создаём объект класса account
    account.run()               # Запускается интерактивный режим объекта (вывод на экран)






